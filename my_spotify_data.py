# -*- coding: utf-8 -*-
"""My_Spotify_Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-Ko3C9LrnKuxVSkhy9XSOSButDSEvZQv
"""

import pandas as pd
import matplotlib.pyplot as plt
import re

# Me-load data json ke dataFrame
df = pd.read_json('/content/StreamingHistory_music_0.json')

# Menampilkan 5 baris pertama dari dataFrame
df.head()

"""## **Data Cleaning**"""

df.info()

# Melihat berapa banyak data terduplikat
df.duplicated().sum()

df1 = pd.read_json('/content/StreamingHistory_music_1.json')

df1.head()

df1.info()

# Melihat berapa banyak data terduplikat
df1.duplicated().sum()

# Menggabungkan 2 data
df_combined = pd.concat([df, df1], ignore_index=True)

# Menampilkan 5 baris pertama
df_combined.head()

df_combined.info()

# Mengubah type data kolom endTime ke datetime
df_combined['endTime'] = pd.to_datetime(df_combined['endTime'])

df_combined.dtypes

# Menampilkan 5 baris pertama
df_combined.head()

# Melihat berapa banyak data terduplikat
df_combined.duplicated().sum()

# Menghapus data yang terduplikat (Jika ada)
df_combined.drop_duplicates(inplace=True)

# Melihat berapa banyak data terduplikat
df_combined.duplicated().sum()

# Menampilkan berapa banyak baris
len(df_combined)

# Mengetahui tanggal awal dan tanggal akhir
df_combined.agg({'endTime': ['min', 'max']})

"""## **Exploratory Data Analysis (EDA)**"""

# Filter untuk data tahun 2025
df_combined_year = df_combined[df_combined['endTime'].dt.year == 2025]

# Menghitung frekuensi musisi
count_artis = df_combined_year['artistName'].value_counts().head(7)

count_artis.index = count_artis.index.map(lambda x: re.sub(r'([_$&%#{}~^\\])', r'\\\1', x))

# Plot
count_artis.plot(kind='bar', title='Top 7 Musisi Paling Sering Didengarkan di Tahun 2025')
plt.xlabel('Nama Musisi')
plt.ylabel('Jumlah')
plt.xticks(rotation=65)
plt.tight_layout()
plt.show()

"""Maliq & D'Essentials menjadi musisi yang paling sering didengarkan di Spotify saya di tahun 2025. Lagu-lagunya diputar paling banyak dibandingkan musisi lainnya."""

# Filter untuk data tahun 2025
df_combined_year = df_combined[df_combined['endTime'].dt.year == 2025]

# Menghitung total msPlayed per musisi
total_played = df_combined_year.groupby('artistName')['msPlayed'].sum().sort_values(ascending=False).head(7) / 60000

total_played.index = total_played.index.map(lambda x: re.sub(r'([_$&%#{}~^\\])', r'\\\1', x))

# Plot
total_played.plot(kind='bar', title='Jumlah Waktu Mendengarkan Lagu per Musisi di Tahun 2025')
plt.xlabel('Nama Musisi')
plt.ylabel('Jumlah Durasi (Menit)')
plt.xticks(rotation=65)
plt.tight_layout()
plt.show()

"""Maliq & D'Essentials menjadi musisi yang paling sering saya dengarkan di spotify sepanjang tahun 2025, berdasarkan jumlah durasi per menit."""

# Filter untuk data tahun 2025
df_combined_year = df_combined[df_combined['endTime'].dt.year == 2025]

# Hitung frekuensi musisi
count_artis = df_combined_year['trackName'].value_counts().head(7)

count_artis.index = count_artis.index.map(lambda x: re.sub(r'([_$&%#{}~^\\])', r'\\\1', x))

# Plot
count_artis.plot(kind='bar', title='Frekuensi Lagu Didengarkan di Tahun 2025')
plt.xlabel('Nama Artis')
plt.ylabel('Jumlah')
plt.xticks(rotation=65)
plt.tight_layout()
plt.show()

"""Menari menjadi lagu yang paling sering saya dengarkan di spotify sepanjang tahun 2025."""

# Filter untuk data tahun 2025
df_combined_year = df_combined[df_combined['endTime'].dt.year == 2025]

# Hitung total msPlayed per musisi
total_played = df_combined_year.groupby('trackName')['msPlayed'].sum().sort_values(ascending=False).head(7) / 60000

total_played.index = total_played.index.map(lambda x: re.sub(r'([_$&%#{}~^\\])', r'\\\1', x))

# Plot
total_played.plot(kind='bar', title='total Waktu Mendengarkan per Lagu di Tahun 2025')
plt.xlabel('Nama Lagu')
plt.ylabel('Total Durasi (Menit)')
plt.xticks(rotation=65)
plt.tight_layout()
plt.show()

"""Menari menjadi lagu yang paling sering saya dengarkan di spotify sepanjang tahun 2025, berdasarkan total durasi per menit."""

# Filter untuk data tahun 2025
df_combined_year = df_combined[df_combined['endTime'].dt.year == 2025].copy()

# Ekstrak jam (0–23)
df_combined_year['jam'] = df_combined_year['endTime'].dt.hour

# Hitung jumlah durasi per jam
frekuensi_jam = df_combined_year.groupby('jam')['msPlayed'].sum() / 60000

# Plot
plt.figure(figsize=(10, 5))
frekuensi_jam.plot(kind='line', marker='o')
plt.title('Frekuensi Waktu Mendengarkan Musik')
plt.xlabel('Jam (0–23)')
plt.ylabel('Total Durasi (Menit)')
plt.grid(True)
plt.xticks(range(0, 24))
plt.xticks(rotation=0)
plt.tight_layout()
plt.show()

"""Sekitar pukul 10:00 WIB dan 16:00 WIB menjadi waktu paling sering saya mendengarkan musik di Spotify sepanjang tahun 2025. Sebaliknya, pada pukul 19:00 WIB hingga pukul 00:00 WIB menjadi waktu paling jarang saya dalam mendengarkan lagu, ini dikarenakan pada waktu tersebut saya biasanya beristirahat atau tidur."""

# Filter untuk data tahun 2025
df_combined_year = df_combined[df_combined['endTime'].dt.year == 2025].copy()

# Ekstrak hari
df_combined_year['hari'] = df_combined_year['endTime'].dt.dayofweek

# Buat mapping angka ke nama hari
nama_hari = ['Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu', 'Minggu']
df_combined_year['nama_hari'] = df_combined_year['hari'].map(lambda x: nama_hari[x])

# Hitung jumlah musik didengar per hari
durasi_per_hari = df_combined_year.groupby('nama_hari')['msPlayed'].sum().reindex(nama_hari) / 60000

# Plot
plt.figure(figsize=(10, 5))
durasi_per_hari.plot(kind='line', marker='o')
plt.title('Frekuensi Waktu Mendengarkan Musik per Hari')
plt.xlabel('Hari')
plt.ylabel('Durasi (menit)')
plt.grid(True)
plt.xticks(rotation=0)
plt.tight_layout()
plt.show()

"""Hari Sabtu menjadi hari paling sering dalam mendengarkan musik di spotify saya sepanjang tahun 2025."""